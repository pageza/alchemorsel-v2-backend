name: Backend CI
# To Trigger changes for CI
on:
  push:
    branches: [ pristine-working-point ]
  pull_request:
    branches: [ pristine-working-point ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install dependencies
        run: go mod download

      - name: Print environment for debugging
        run: env | sort

      - name: Run tests
        run: go test -v -cover ./...
        env:
          CI: "true"
          # TestContainers config
          TESTCONTAINERS_RYUK_DISABLED: "true"
          TESTCONTAINERS_RYUK_CONTAINER_PRIVILEGED: "true"
          # Server config
          SERVER_HOST: localhost
          SERVER_PORT: 8080
          # Database config
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: testuser
          TEST_DB_PASSWORD: testpass
          DB_NAME: testdb
          DB_SSL_MODE: disable
          # Redis config
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          TEST_REDIS_PASSWORD: test-redis-pass
          REDIS_URL: redis://:test-redis-pass@localhost:6379/0
          # Auth config
          TEST_JWT_SECRET: test-jwt-secret
          # LLM config
          LLM_API_KEY: ${{ secrets.TEST_LLM_API_KEY }}
        # Add timeout and ensure proper cleanup
        timeout-minutes: 10

      - name: Clear golangci-lint cache
        run: |
          rm -rf ~/.cache/golangci-lint
          rm -rf ~/.cache/go-build
          rm -rf ~/go/pkg

      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        continue-on-error: true
        with:
          version: latest
          args: --config=.golangci.yml
